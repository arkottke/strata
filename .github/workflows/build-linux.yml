name: build-linux

on: [push, pull_request]


jobs:
  build:
    # Based on requirement by linuxdeployqt
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-bionic
          sudo apt-get update
          sudo apt-get install -y cmake make grep sed libgsl-dev libgl1-mesa-dev qt515base qt515tools qt515svg
      # Here we need to run the build steps within a script because we cannot source the qtvars file
      - name: build
        run: bash contrib/github-action-build-linux.sh
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ${{github.workspace}}/build/dist
          retention-days: 5
      - name: create appimage
        run: bash contrib/github-action-make-appimage.sh
      - uses: actions/upload-artifact@v3
        with:
          name: strata appimage
          path: ${{ github.workspace }}/build/Strata-*.AppImage
  find-tests:
    runs-on: ubuntu-18.04
    outputs:
      tests: ${{ steps.find-tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v2
      - name: find tests
        working-directory: ${{github.workspace}}/example
        run: |
          tests=$(ls *.json *.strata | jq -cnR '[inputs | select(length>0)]')
          echo $tests
          echo "::set-output name=tests::$tests"
  check-tests:
    runs-on: ubuntu-latest
    needs: find-tests
    steps:
      - name: check located test cases
        run: |
          tests='${{ needs.find-tests.outputs.tests }}'
          echo $tests
          echo $tests | jq .
  test:
    runs-on: ubuntu-18.04
    needs: [find-tests, build]
    strategy:
      fail-fast: false
      matrix:
        case: ${{ fromJson(needs.find-tests.outputs.tests) }}
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qt5-default gsl-bin libqwt-qt5-6
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ${{github.workspace}}/dist
      - name: perform tests
        run: |
          # Permissions reset on downloading artifact
          chmod +x dist/usr/bin/strata
          ./strata -b example/${{ matrix.case }}
