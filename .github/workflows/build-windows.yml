name: build-windows

on: [push, release]


jobs:
  build:
    # Based on requirement by linuxdeployqt
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          dir: '${{ github.workspace }}/../Qt'
          tools: 'tools_ifw'
          extra: '--external 7z'
      - uses: actions/cache@v3
        id: cache-deps
        with:
          path: ${{ github.workspace }}/deps
          key: ${{ runner.os }}
      - name: Build dependencies (qwt & gsl)
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          mkdir deps
          cd deps
          git clone --branch qwt-6.2 https://git.code.sf.net/p/qwt/git qwt
          cd qwt
          qmake
          nmake
          nmake install
          cd ..
          git clone https://github.com/ampl/gsl.git gsl
          cd gsl
          git submodule update --init --recursive
          mkdir build
          cd build
          cmake .. `
            -G "Visual Studio 16 2019" `
            -DGSL_DISABLE_WARNINGS:BOOL=ON `
            -DBUILD_SHARED_LIBS:BOOL=ON `
            -DMSVC_RUNTIME_DYNAMIC:BOOL=ON `
            -DCMAKE_BUILD_TYPE="Release" `
            -DGSL_DISABLE_TESTS=1 `
            -DNO_AMPL_BINDINGS=1 `
            -DDOCUMENTATION=OFF
          cmake --build . --config Release
      - name: Install dependencies (qwt & gsl)
        run: |
          cd deps/qwt
          nmake install
          cd ../gsl/build
          cmake --build . --target install --config Release
      - name: Set path for candle and light
        run: echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $GITHUB_PATH
        shell: bash
      - name: build
        run: |
          mkdir build
          cd build
          cmake .. `
            -G "Visual Studio 16 2019" `
            -DQWT_ROOT_DIR="C:/Qwt-6.2.0-dev" `
            -DQWT_INCLUDE_DIR="C:/Qwt-6.2.0-dev/include" `
            -DGSL_ROOT_DIR="C:/Program Files (x86)/GSL" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX:STRING=dist
          cmake --build . --target install --config Release
          echo "Built $(dist/strata.exe -v)$"
          cmake --build . --target package --config Release
          cmake --build . --target archive --config Release
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - uses: actions/upload-artifact@v3
        with:
          name: strata installer
          path: ${{ github.workspace }}/build/Strata-*.exe
      - uses: actions/upload-artifact@v3
        with:
          name: strata archive
          path: ${{ github.workspace }}/build/Strata-*.zip
